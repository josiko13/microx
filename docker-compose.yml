version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: microx-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: microx
      MYSQL_USER: microx
      MYSQL_PASSWORD: microx123
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - microx-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: microx-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - microx-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  # MicroX Application
  app:
    build: .
    container_name: microx-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=microx
      - DB_USER=root
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - PORT=8080
      - ENV=development
      - MAX_TWEET_LENGTH=280
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - microx-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      timeout: 30s
      retries: 5
      start_period: 40s

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    container_name: microx-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DEFAULT_DB_DRIVER: mysql
    depends_on:
      - mysql
    networks:
      - microx-network

  # Redis Commander (Redis Management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: microx-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - microx-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  microx-network:
    driver: bridge 